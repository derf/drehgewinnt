#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;
use Term::ReadKey;

our $VERSION = '0.0';

my @field;
my $pcur = 1;
my $ppos = 0;
my $owidth = 6;
my $oheight = 5;

sub draw_field {
	my ($field, $char) = @_;

	$char //= '●';

	given ($field) {
		when (0) { print q{ } }
		when (1) { print $char }
		when (2) { print "\e[0;31m${char}\e[0;m" }
		default  { print q{?} }
	}
}

sub draw_game {
	for my $x (0 .. $owidth) {
		print q{ };
		if ($x == $ppos) {
			draw_field($pcur, '▼');
		}
		else {
			print q{ };
		}
	}
	print "\n";
	for my $y (0 .. $oheight) {
		if ($y == 0) {
			print "┌─";
			for (1 .. $owidth) {
				print '┬─';
			}
			print "┐\n";
		}
		else {
			print "├─";
			for (1 .. $owidth) {
				print '┼─';
			}
			print "┤\n";
		}
		for my $x (0 .. $owidth) {
			print q{│};
			draw_field($field[$x][$y]);
		}
		print "│\n";
	}
	print "└─";
	for (1 .. $owidth) {
		print '┴─';
	}
	print "┘\n";
}

sub ini_game {
	for my $i (0 .. $owidth) {
		for my $j (0 .. $oheight) {
			$field[$i][$j] = 0;
		}
	}
}

sub add_stone {
	my ($x, $player) = @_;

	for my $y (0 .. $oheight) {
		if ($field[$x][$oheight - $y] == 0) {
			$field[$x][$oheight - $y] = $player;
			return;
		}
	}
}

ini_game;
draw_game;

ReadMode(3);
while (my $key = ReadKey(0)) {
	if ($key eq 'D') {
		$ppos = ($ppos + $owidth) % ($owidth + 1);
	}
	elsif ($key eq 'C') {
		$ppos = ($ppos + 1) % ($owidth + 1);
	}
	elsif ($key eq 'B') {
		add_stone($ppos, $pcur);
		$pcur = (!($pcur - 1)) + 1;
	}
	if ($key eq 'q') {
		ReadMode(0);
		last;
	}
	draw_game;
}

__END__

=head1 NAME

=head1 SYNOPSIS

=head1 VERSION

=head1 DESCRIPTION

=head1 OPTIONS

=over

=back

=head1 EXIT STATUS

=head1 CONFIGURATION

None.

=head1 DEPENDENCIES

=over

=back

=head1 BUGS AND LIMITATIONS

=head1 AUTHOR

Copyright (C) 2012 by Daniel Friesel E<lt>derf@finalrewind.orgE<gt>

=head1 LICENSE

  0. You just DO WHAT THE FUCK YOU WANT TO.
